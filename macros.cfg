###############################################################################
#          Backup to Github
###############################################################################
[gcode_shell_command backup_cfg]
command: sh /home/pi/myscripts/backup.sh
timeout: 30.
verbose: True
 
[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg


###############################################################################
#          Resonance testing
###############################################################################

[gcode_shell_command x_process_res]
command: sh /home/pi/myscripts/X_process_resonances.sh
timeout: 180.
verbose: True

[gcode_shell_command y_process_res]
command: sh /home/pi/myscripts/Y_process_resonances.sh
timeout: 180.
verbose: True

[gcode_macro TEST_X_RESONANCES]
description: Perform X resonance tests, takes a while of course
gcode:
    TEST_RESONANCES AXIS=X
    RUN_SHELL_COMMAND CMD=x_process_res

[gcode_macro TEST_Y_RESONANCES]
description: Perform Y resonance tests, takes a while of course
gcode:
    TEST_RESONANCES AXIS=Y
    RUN_SHELL_COMMAND CMD=y_process_res

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
 
[gcode_macro RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}
    M221 S100                                                                   # Reset flow to 100%
    M220 S100                                                                   # Reset speed to 100%

[gcode_macro DISABLE_MOTORS]
description: Disable XYZE motor immediately
gcode:
    M18

[gcode_macro OFF]
description: Turn off everything
gcode:
    DISABLE_MOTORS
    TURN_OFF_HEATERS
    M107
	STATUS_OFF
    
[gcode_macro PROBE_TEST]
gcode:
    G28
    PROBE_ACCURACY samples=50

[gcode_macro BED_MESH]
gcode:
  CG28
  STATUS_MESHING
  BED_MESH_CALIBRATE
  #BED_MESH_PROFILE load=default
  STATUS_READY
   
[gcode_macro BED_TRAMMING]
gcode:
  #{% set BED_TEMP = params.BED_TEMP|default(100)|float %}
  #M140 S{BED_TEMP}	
  CG28 
  #M190 S{BED_TEMP}
  SCREWS_TILT_CALCULATE samples=3


[gcode_macro M117]
description: Set LCD Message
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0] | replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set X = params.X|default(220)|float %}
    {% set Y = params.Y|default(200)|float %}
    {% set Z = params.Z|default(15)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
    
############################# FILAMENT ##################################
    
[gcode_macro UNLOAD_FILAMENT]
#   Extrusion lengths must be adjusted for your particular configuration before use
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    loading
    M83                                   ; set extruder to relative
    G1 E5 F600                            ; extrude a little to soften tip
    G1 E-90 F1800                         ; retract filament completely
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
#   Extrusion lengths must be adjusted for your particular configuration before use
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    loading
    M83 ; set extruder to relative
    G1 E50 F1800                         ; quickly load filament to down bowden
    G1 E10 F300                           ; slower extrusion for hotend path
    G1 E5 F150                           ; prime nozzle with filament
    RESTORE_GCODE_STATE NAME=LOADFILAMENT
    
[gcode_macro HOT_UNLOAD]
gcode:
    # Parameters
    {% set t = params.T|default(240)|int %}
    
    M104 S{t}
    PARKFRONT
    M109 S{t}
    UNLOAD_FILAMENT
    
[gcode_macro HOT_LOAD]
gcode:
    # Parameters
    {% set t = params.T|default(240)|int %}
    
    M104 S{t}
    PARKFRONT
    M109 S{t}
    LOAD_FILAMENT   

############################# PID CALIBRATE ##################################
[gcode_macro PID_CALIBRATE_BED]
description: Run bed PID calibration test
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(100, true) | float %}
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}

[gcode_macro PID_CALIBRATE_HOTEND]
description: Run hotend PID calibration test
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(240, true) | float %}
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}


###############################################
## SET_PRESSURE_ADVANCE Set Pressure Advance ##                    
###############################################
[gcode_macro PRESSURE_ADVANCE_CLEAR]
description: Pressure Advance 0
gcode:
  SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE=0.000

[gcode_macro START_PESSURE_ADVANCE]
description: Set velocity plus tuning tower command for direct drive
gcode:
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
  TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005

################################################################################
# [gcode_macro TUNING_TOWER_PRESSURE_ADVANCE]
# description: Tuning Tower for Pressure Advance
# gcode:
#  {% set START = params.START | default(0, true) | float %}
#  {% set FACTOR = params.FACTOR | default(0.005, true) | float %}
#  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
#  TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START={START} FACTOR={FACTOR}  

############################ TESTSPEED ##################################
[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#[gcode_macro POWER_OFF_PRINTER]
#gcode:
#  {action_call_remote_method("set_device_power",
#                             device="printer",
#                             state="off")}

#[delayed_gcode delayed_printer_off]
#initial_duration: 0.
#gcode:
#  POWER_OFF_PRINTER

#[idle_timeout]
#timeout: 300
#gcode:
#  M84
#  TURN_OFF_HEATERS
  #UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=120
    
